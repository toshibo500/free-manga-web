/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/manga/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** マンガの詳細情報を取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description マンガのID */
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description マンガ情報の取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Manga"];
                    };
                };
                /** @description マンガが見つからない */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/manga/popular-books/{categoryId}/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** カテゴリー別の人気マンガを取得 */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description カテゴリーID */
                    categoryId: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 人気マンガリストの取得成功 */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Manga"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Manga: {
            /** @description マンガの一意識別子 */
            id: string;
            /** @description マンガのタイトル */
            title: string;
            /** @description 作者名 */
            author: string;
            /** @description マンガの説明 */
            description?: string;
            /** @description カバー画像のURL */
            coverImage?: string;
            /** @description マンガのカテゴリー */
            category: string;
            /**
             * Format: float
             * @description 評価点（5点満点）
             */
            rating?: number;
            /** @description チャプター一覧 */
            chapters?: components["schemas"]["Chapter"][];
            /** @description 公開状態 */
            published?: boolean;
            /**
             * Format: date
             * @description 出版日
             */
            publishDate?: string;
        };
        Chapter: {
            /** @description チャプターの一意識別子 */
            id: string;
            /** @description チャプタータイトル */
            title: string;
            /** @description チャプター番号 */
            number?: number;
            /** @description ページ数 */
            pages?: number;
            /**
             * Format: date
             * @description リリース日
             */
            releaseDate?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
