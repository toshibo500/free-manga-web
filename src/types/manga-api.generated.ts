/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/manga/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description マンガ情報を取得するためのViewSet */
        get: operations["manga_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/popular-books/{category}/": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                category: string;
            };
            cookie?: never;
        };
        /**
         * カテゴリ別の人気マンガリストを取得するビュー
         * @description クエリパラメータ:
         *     - count: 返すマンガの件数（デフォルト: 10、最大: 100）
         *     - offset: 開始位置（デフォルト: 0）
         */
        get: operations["manga_popular-books_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/manga/{id}/": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this マンガ. */
                id: number;
            };
            cookie?: never;
        };
        /** @description マンガ情報を取得するためのViewSet */
        get: operations["manga_read"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        EbookStoreDetail: {
            /** Ebookstore name */
            ebookstore_name: string;
            /**
             * Manga detail url
             * Format: uri
             */
            manga_detail_url: string;
            /**
             * Free chapters
             * @description 無料で読める話数
             */
            free_chapters: number;
            /**
             * Free books
             * @description 無料で読める冊数
             */
            free_books: number;
        };
        Manga: {
            /** Id */
            readonly id?: number;
            /** Title */
            title: string;
            /** ISBN */
            isbn?: string | null;
            /** Author */
            author: string;
            /**
             * Cover image
             * Format: uri
             */
            cover_image: string;
            categories: string[];
            /** Description */
            description?: string | null;
            /** 1巻タイトル */
            first_book_title?: string | null;
            /** Rating */
            rating?: number;
            /**
             * Free chapters
             * @description 無料で読める話数
             */
            free_chapters?: number;
            /**
             * Free books
             * @description 無料で読める冊数
             */
            free_books?: number;
            readonly ebookstores?: components["schemas"]["EbookStoreDetail"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    manga_list: {
        parameters: {
            query?: {
                /** @description A page number within the paginated result set. */
                page?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        count: number;
                        /** Format: uri */
                        next?: string | null;
                        /** Format: uri */
                        previous?: string | null;
                        results: components["schemas"]["Manga"][];
                    };
                };
            };
        };
    };
    "manga_popular-books_read": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                category: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Manga"][];
                };
            };
        };
    };
    manga_read: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description A unique integer value identifying this マンガ. */
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Manga"];
                };
            };
        };
    };
}
